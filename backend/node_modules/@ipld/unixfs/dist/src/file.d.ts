export * from "./file/api.js";
export function defaults(): API.EncoderSettings;
export function configure<Layout extends unknown>(config: Partial<API.EncoderSettings<Layout>>): API.EncoderSettings<Layout>;
export namespace UnixFSLeaf {
    const code: 112;
    const name: string;
    const encode: (content: Uint8Array) => UnixFS.ByteView<UnixFS.FileChunk>;
}
export namespace UnixFSRawLeaf {
    const code_1: 112;
    export { code_1 as code };
    const name_1: string;
    export { name_1 as name };
    const encode_1: (content: Uint8Array) => UnixFS.ByteView<UnixFS.Raw>;
    export { encode_1 as encode };
}
export function create<Layout>({ writer, metadata, settings }: API.Options<Layout>): API.View<Layout>;
export function write<T>(view: API.View<T>, bytes: Uint8Array): Promise<API.View<T>>;
export function close<T>(view: API.View<T>, { releaseLock, closeWriter }?: API.CloseOptions): Promise<UnixFS.FileLink>;
import * as API from "./file/api.js";
import * as UnixFS from "./codec.js";
//# sourceMappingURL=file.d.ts.map