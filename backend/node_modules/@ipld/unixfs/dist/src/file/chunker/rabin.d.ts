export const name: "rabin";
export function defaults(): Config;
export function configure({ avg, min, max, window, }: Partial<Config> & {
    avg: number;
}): {
    avg: number;
    min: number;
    max: number;
    window: number;
};
export function create(config?: Config): Promise<API.StatelessChunker<Context>>;
export function createWithPolynom(polynom: BigInt, config?: Config): Promise<API.StatelessChunker<Context>>;
export function cut(rabin: Context, buffer: API.Chunk, end: boolean): Int32Array;
export type Config = {
    avg: number;
    min: number;
    max: number;
    window: number;
};
export type Context = Rabin.Rabin;
import * as API from "./api.js";
import * as Rabin from "rabin-rs";
//# sourceMappingURL=rabin.d.ts.map