export const code: 4869;
export function decode(source: API.ByteView<RSAPrivateKey>, byteOffset?: number): RSAPrivateKey;
export function encode({ v, n, e, d, p, q, dp, dq, qi }: RSAPrivateKey): API.ByteView<RSAPrivateKey>;
export function toJWK({ n, e, d, p, q, dp, dq, qi }: RSAPrivateKey): JsonWebKey;
export function fromJWK({ n, e, d, p, q, dp, dq, qi }: JsonWebKey): RSAPrivateKey;
export function toPKCS8(key: RSAPrivateKey): API.ByteView<PKCS8.PrivateKeyInfo>;
export function fromPKCS8(info: API.ByteView<PKCS8.PrivateKeyInfo>): RSAPrivateKey;
export function toSPKI(key: RSAPrivateKey): API.ByteView<SPKI.SubjectPublicKeyInfo>;
export type RSAPrivateKey = {
    v: Uint8Array;
    n: Uint8Array;
    e: Uint8Array;
    d: Uint8Array;
    p: Uint8Array;
    q: Uint8Array;
    dp: Uint8Array;
    dq: Uint8Array;
    qi: Uint8Array;
};
import * as API from '@ucanto/interface';
import * as PKCS8 from './pkcs8.js';
import * as SPKI from './spki.js';
//# sourceMappingURL=private-key.d.ts.map