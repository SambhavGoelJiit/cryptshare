export * from "./type.js";
export const code: 4864;
export const name: "Ed25519";
/** @type {'EdDSA'} */
export const signatureAlgorithm: 'EdDSA';
export const signatureCode: API.SigAlg;
export const PUB_KEY_OFFSET: number;
export function generate(): Promise<API.EdSigner>;
export function derive(secret: Uint8Array): Promise<API.EdSigner>;
export function from({ id, keys }: API.SignerArchive<API.DID, typeof signatureCode>): API.EdSigner;
export function or<O extends API.SignerImporter<`did:${string}:${string}`, API.Crypto.SigAlg>>(other: O): API.CompositeImporter<[{
    from: ({ id, keys }: API.SignerArchive<API.DID, typeof signatureCode>) => API.EdSigner;
}, O]>;
export function decode(bytes: Uint8Array): API.EdSigner;
export function encode(signer: API.EdSigner): API.ByteView<API.EdSigner & CryptoKeyPair>;
export function format<Prefix extends string>(signer: API.EdSigner, encoder?: API.MultibaseEncoder<Prefix> | undefined): string;
export function parse<Prefix extends string>(principal: string, decoder?: API.MultibaseDecoder<Prefix> | undefined): API.EdSigner;
import * as API from './type.js';
//# sourceMappingURL=signer.d.ts.map