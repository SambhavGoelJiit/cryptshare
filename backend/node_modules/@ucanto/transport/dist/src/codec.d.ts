export function inbound(source: {
    decoders: Record<ContentType, API.Transport.RequestDecoder>;
    encoders: Record<MediaType, API.Transport.ResponseEncoder>;
}): API.InboundCodec;
export function outbound(source: {
    encoders: Record<MediaType, API.Transport.RequestEncoder>;
    decoders: Record<ContentType, API.Transport.ResponseDecoder>;
}): API.OutboundCodec;
export function parseMediaType(source: string): Media;
export function formatMediaType({ category, type, preference }: Media): MediaType;
export function parseAcceptHeader(source: string): Media[];
export function formatAcceptHeader(source: Media[]): string;
export type ContentType = `${Lowercase<string>}/${Lowercase<string>}` | `${Lowercase<string>}/${Lowercase<string>}+${Lowercase<string>}`;
export type MediaType = `${Lowercase<string>}/${Lowercase<string>}` | `${Lowercase<string>}/${Lowercase<string>};q=${number}.${number}`;
export type Media = {
    category: string;
    type: string;
    preference: number;
};
import * as API from '@ucanto/interface';
//# sourceMappingURL=codec.d.ts.map