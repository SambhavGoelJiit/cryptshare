export function uri(): Schema.Schema<API.URI, unknown>;
export function read(input: unknown): Schema.ReadResult<API.URI<`${string}:`>, API.Failure>;
export function match<P extends `${string}:`, O extends Options<P>>(options: O): Schema.Schema<API.URI<O["protocol"]>, unknown>;
export function from<Scheme extends string = string>(input: `${Scheme}:${string}`): API.URI<`${Scheme}:`>;
export type Options<P extends `${string}:` = `${string}:`> = {
    protocol: P;
};
import * as Schema from './schema.js';
import * as API from '@ucanto/interface';
//# sourceMappingURL=uri.d.ts.map