export function did(): Schema.StringSchema<`did:${string}:${string}` & `did:${string}` & API.Phantom<{
    protocol: "did:";
}>, unknown>;
export function read(input: unknown): API.Result<`did:${string}:${string}` & `did:${string}` & API.Phantom<{
    protocol: "did:";
}>, API.Failure>;
export function match<Method extends string>(options?: {
    method?: Method | undefined;
}): Schema.Schema<`did:${Method}:${string}` & `did:${string}` & API.Phantom<{
    protocol: "did:";
}>, any>;
export function from(input: unknown): `did:${string}:${string}` & `did:${string}` & API.Phantom<{
    protocol: "did:";
}>;
import * as API from '@ucanto/interface';
import * as Schema from './schema.js';
//# sourceMappingURL=did.d.ts.map