export function validateAuthorization(): {
    ok: {};
};
export function createAuthorization({ account, agent, service }: {
    account: Types.UCAN.Signer<Types.AccountDID>;
    service: Types.Signer<Types.DID>;
    agent: Types.Signer;
}): Promise<(Server.API.Delegation<[{
    with: "ucan:*";
    can: "*";
}]> | Server.API.Invocation<{
    can: "ucan/attest";
    with: `did:${string}:${string}` & `did:${string}` & Server.API.Phantom<{
        protocol: "did:";
    }>;
    nb: Server.Schema.InferStruct<{
        proof: Server.Schema.Schema<Server.API.Link<unknown, number, number, 1>, any>;
    }>;
}>)[]>;
import * as Types from '../../src/types.js';
import { UCAN } from '@web3-storage/capabilities';
import * as Server from '@ucanto/server';
//# sourceMappingURL=utils.d.ts.map